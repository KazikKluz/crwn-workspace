{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport shopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"../../redux/shop/shop.actions\";\nexport function* fetchCollectionsStartAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // collectionRef\n  //   .get()\n  //   .then((snapShot) => {\n  //     const collectionsMap = convertCollectionSnapshotToMap(snapShot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["/home/fdiamond/Training/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","put","shopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsStartAsync","collectionRef","collection","snapShot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,+BAHP;AAKA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AAEA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACI,8BAAD,EAAiCM,QAAjC,CAAjC;AACA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD,GAT2C,CAU5C;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CACbG,eAAe,CAACc,uBADH,EAEbT,0BAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\n\nimport shopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"../../redux/shop/shop.actions\";\n\nexport function* fetchCollectionsStartAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapShot = yield collectionRef.get();\n\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n  // collectionRef\n  //   .get()\n  //   .then((snapShot) => {\n  //     const collectionsMap = convertCollectionSnapshotToMap(snapShot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    shopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsStartAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}