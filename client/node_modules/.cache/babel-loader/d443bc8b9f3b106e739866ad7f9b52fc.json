{"ast":null,"code":"import { all, call, takeLatest, put } from \"redux-saga/effects\";\nimport { UserActionTypes } from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess } from \"./user.actions\";\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  const {\n    user\n  } = yield auth.signInWithEmailAndPassword(email, password);\n  yield getSnapshotFromUserAuth(user);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithGoogle() {\n  const {\n    user\n  } = yield auth.signInWithPopup(googleProvider);\n  yield getSnapshotFromUserAuth(user);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/fdiamond/Training/crwn-clothing/src/redux/user/user.sagas.js"],"names":["all","call","takeLatest","put","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInFailure","signInSuccess","signInWithEmail","payload","email","password","user","signInWithEmailAndPassword","getSnapshotFromUserAuth","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userAuth","userRef","userSnapshot","get","id","data","error","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,eAAT,QAAgC,cAAhC;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMT,IAAI,CAACU,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,QAAMG,uBAAuB,CAACF,IAAD,CAA7B;AACD;AAED,OAAO,UAAUG,kBAAV,GAA+B;AACpC,QAAMf,UAAU,CAACE,eAAe,CAACc,mBAAjB,EAAsCR,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUS,gBAAV,GAA6B;AAClC,QAAM;AAAEL,IAAAA;AAAF,MAAW,MAAMT,IAAI,CAACe,eAAL,CAAqBd,cAArB,CAAvB;AACA,QAAMU,uBAAuB,CAACF,IAAD,CAA7B;AACD;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACrC,QAAMnB,UAAU,CAACE,eAAe,CAACkB,oBAAjB,EAAuCH,gBAAvC,CAAhB;AACD;AACD,OAAO,UAAUH,uBAAV,CAAkCO,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMvB,IAAI,CAACM,yBAAD,EAA4BgB,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMvB,GAAG,CAACM,aAAa,CAAC;AAAEkB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAM1B,GAAG,CAACK,aAAa,CAACqB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACoB,mBAAD,CAAL,EAA4BpB,IAAI,CAACgB,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { all, call, takeLatest, put } from \"redux-saga/effects\";\n\nimport { UserActionTypes } from \"./user.types\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess } from \"./user.actions\";\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  const { user } = yield auth.signInWithEmailAndPassword(email, password);\n  yield getSnapshotFromUserAuth(user);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* signInWithGoogle() {\n  const { user } = yield auth.signInWithPopup(googleProvider);\n  yield getSnapshotFromUserAuth(user);\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}