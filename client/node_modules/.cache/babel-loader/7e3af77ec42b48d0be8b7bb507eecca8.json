{"ast":null,"code":"import { all, call, takeLatest, put } from \"redux-saga/effects\";\nimport { UserActionTypes } from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess } from \"./user.actions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    yield console.log(email);\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/fdiamond/Training/crwn-clothing/src/redux/user/user.sagas.js"],"names":["all","call","takeLatest","put","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInFailure","signInSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","console","log","user","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,eAAT,QAAgC,cAAhC;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACM,yBAAD,EAA4BI,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMX,GAAG,CAACM,aAAa,CAAC;AAAEM,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACK,aAAa,CAACS,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAMC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAAN;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACoB,0BAAL,CAAgCL,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMX,uBAAuB,CAACc,IAAD,CAA7B;AACD,GAJD,CAIE,OAAOP,KAAP,EAAc;AACd,UAAMd,GAAG,CAACK,aAAa,CAACS,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,kBAAV,GAA+B;AACpC,QAAMxB,UAAU,CAACE,eAAe,CAACuB,mBAAjB,EAAsCT,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUU,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEJ,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACwB,eAAL,CAAqBvB,cAArB,CAAvB;AACA,UAAMI,uBAAuB,CAACc,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc;AACd,UAAMd,GAAG,CAACK,aAAa,CAACS,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUa,mBAAV,GAAgC;AACrC,QAAM5B,UAAU,CAACE,eAAe,CAAC2B,oBAAjB,EAAuCH,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUI,SAAV,GAAsB;AAC3B,QAAMhC,GAAG,CAAC,CAACC,IAAI,CAAC6B,mBAAD,CAAL,EAA4B7B,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { all, call, takeLatest, put } from \"redux-saga/effects\";\n\nimport { UserActionTypes } from \"./user.types\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess } from \"./user.actions\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    yield console.log(email);\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}