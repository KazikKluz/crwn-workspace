{"ast":null,"code":"import { all, call, takeLatest, put } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user.actions\";\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/home/fdiamond/Training/crwn-clothing/src/redux/user/user.saga.js"],"names":["all","call","takeLatest","put","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","isUserAuthenticated","userAuth","getSnapshotFromUserAuth","error","onCheckUserSession","CHECK_USER_SESSION","userRef","userSnapshot","get","id","data","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","signOut","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { all, call, takeLatest, put } from \"redux-saga/effects\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n} from \"./user.actions\";\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}