{"ast":null,"code":"var _jsxFileName = \"/home/fdiamond/Training/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./sign-in.styles.scss\";\nimport FormInput from \"../../components/form-input/form-input.component.jsx\";\nimport CustomButton from \"../../components/custom-button/custom-button.component.jsx\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nconst SignIn = (emailSignInStart, googleSignInStart) => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: \"email\",\n    handleChange: handleChange,\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: \"password\",\n    handleChange: handleChange,\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    value: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    isGoogleSignIn: true,\n    onClick: googleSignInStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchProps)(SignIn);","map":{"version":3,"sources":["/home/fdiamond/Training/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","e","preventDefault","handleChange","name","value","target","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./sign-in.styles.scss\";\n\nimport FormInput from \"../../components/form-input/form-input.component.jsx\";\nimport CustomButton from \"../../components/custom-button/custom-button.component.jsx\";\n\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.actions\";\n\nconst SignIn = (emailSignInStart, googleSignInStart) => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <h2 className=\"title\">I already have an account</h2>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"email\"\n          handleChange={handleChange}\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          required\n        />\n        <FormInput\n          label=\"password\"\n          handleChange={handleChange}\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          required\n        />\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\" value=\"submit\">\n            Sign In\n          </CustomButton>\n          <CustomButton\n            type=\"button\"\n            isGoogleSignIn\n            onClick={googleSignInStart}\n          >\n            Sign In With Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}