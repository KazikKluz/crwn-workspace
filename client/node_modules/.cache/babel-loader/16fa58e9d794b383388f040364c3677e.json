{"ast":null,"code":"import { all, call, takeLatest, put } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, sigInAfterSignUp);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/home/fdiamond/Training/crwn-clothing/src/redux/user/user.saga.js"],"names":["all","call","takeLatest","put","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","signUp","payload","email","password","displayName","user","createUserWithEmailAndPassword","additionalData","error","signInAfterSignUp","getSnapshotFromUserAuth","onSignUpSuccess","SIGN_UP_SUCCESS","sigInAfterSignUp","onSignUpStart","SIGN_UP_START","isUserAuthenticated","userAuth","onCheckUserSession","CHECK_USER_SESSION","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","signOut","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { all, call, takeLatest, put } from \"redux-saga/effects\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure,\n} from \"./user.actions\";\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, sigInAfterSignUp);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}