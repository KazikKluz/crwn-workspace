{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport shopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"../../redux/shop/shop.actions\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/fdiamond/Training/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["call","put","takeLatest","shopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","collection","snapShot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,+BAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACK,8BAAD,EAAiCM,QAAjC,CAAjC;AACA,UAAMV,GAAG,CAACM,uBAAuB,CAACM,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMd,UAAU,CACdC,eAAe,CAACc,uBADF,EAEdT,qBAFc,CAAhB;AAID","sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport shopActionTypes from \"./shop.types\";\n\nimport {\n  firestore,\n  convertCollectionSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess,\n} from \"../../redux/shop/shop.actions\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    shopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}